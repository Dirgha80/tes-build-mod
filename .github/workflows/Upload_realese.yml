name: Download & Upload (Release / Repo - Self / Other)

on:
  workflow_dispatch:
    inputs:
      file_urls:
        description: "Daftar URL file (pisahkan dengan spasi)"
        required: true
        default: "https://example.com/file1.zip https://example.com/file2.img.gz"
      file_names:
        description: "Daftar nama file (pisahkan dengan spasi, urutan sama dengan URL, optional)"
        required: false
        default: ""
      target:
        description: 'Pilih target upload: release / repo'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - repo           
      repo_target:
        description: 'Repo tujuan: self / other'
        required: true
        default: 'self'
        type: choice
        options:
          - self
          - other
      target_repo:
        description: 'Repo tujuan kalau pilih other (format: owner/repo)'
        required: false
        default: 'username/target-repo'
      branch:
        description: 'Branch tujuan (kalau pilih repo)'
        required: false
        default: 'main'
      folder:
        description: 'Nama folder di repo (kalau pilih repo)'
        required: false
        default: 'downloads'
      token_option:
        description: 'Pilih token GitHub (PAT)'
        required: true
        default: tes-rep
        type: choice
        options:
          - tes-rep
          - kernel54
          - dirgha80  

jobs:
  download-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Set Token from Input
        id: choose_token
        run: |
          case "${{ github.event.inputs.token_option }}" in
            tes-rep)
              echo "PAT=${{ secrets.TARGET_REPO_PAT }}" >> $GITHUB_ENV
              ;;
            kernel54)
              echo "PAT=${{ secrets.TARGET_REPO_PAT2 }}" >> $GITHUB_ENV
              ;;
            dirgha80)
              echo "PAT=${{ secrets.TARGET_REPO_PAT3 }}" >> $GITHUB_ENV
              ;;
            *)
              echo "::error ::Pilihan token tidak valid!"
              exit 1
              ;;
          esac
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download multiple files
        run: |
          mkdir files
          # Pisahkan input berdasarkan spasi
          urls=(${{ github.event.inputs.file_urls }})
          names=(${{ github.event.inputs.file_names }})

          for i in "${!urls[@]}"; do
            url="${urls[$i]}"
            name="${names[$i]}"
            [ -z "$name" ] && name=$(basename "$url")
            echo "Download: $url -> files/$name"
            curl -L "$url" -o "files/$name"
          done
          echo "FILES_PATH=files/*" >> $GITHUB_ENV

      # === Release di repo ini ===
      - name: Set Release Tag
        if: ${{ github.event.inputs.target == 'release' && github.event.inputs.repo_target == 'self' }}
        run: |
          TAG="${{ github.event.inputs.folder }}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "RELEASE_NAME=$TAG" >> $GITHUB_ENV

      - name: Create Release (repo ini)
        if: ${{ github.event.inputs.target == 'release' && github.event.inputs.repo_target == 'self' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.RELEASE_NAME }}
          files: ${{ env.FILES_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # === Release di repo lain ===
      - name: Create Release (repo lain)
        if: ${{ github.event.inputs.target == 'release' && github.event.inputs.repo_target == 'other' }}
        env:
          GH_TOKEN: ${{ env.PAT }}
        run: |
          TAG="${{ github.event.inputs.folder }}"
          RELEASE_NAME="Release $TAG"

          gh release create "$TAG" "${{ env.FILE_PATH }}" \
            --repo "${{ github.event.inputs.target_repo }}" \
            --title "$RELEASE_NAME" \
            --notes "Automatic release from workflow"

      # === Commit ke repo ini ===
      - name: Commit file ke repo ini
        if: ${{ github.event.inputs.target == 'repo' && github.event.inputs.repo_target == 'self' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p "${{ github.event.inputs.folder }}"
          mv "${{ env.FILE_PATH }}" "${{ github.event.inputs.folder }}/"
          git add "${{ github.event.inputs.folder }}/"
          git commit -m "Add file from URL ${{ github.event.inputs.file_url }} to ${{ github.event.inputs.folder }}/"
          git push origin "${{ github.event.inputs.branch }}"

      # === Commit ke repo lain ===
      - name: Commit file ke repo lain
        if: ${{ github.event.inputs.target == 'repo' && github.event.inputs.repo_target == 'other' }}
        run: |
          git clone https://x-access-token:${{ env.PAT }}@github.com/${{ github.event.inputs.target_repo }} target-repo
          cd target-repo
          git checkout "${{ github.event.inputs.branch }}" || git checkout -b "${{ github.event.inputs.branch }}"
          mkdir -p "${{ github.event.inputs.folder }}"
          mv ../"${{ env.FILE_PATH }}" "${{ github.event.inputs.folder }}/"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${{ github.event.inputs.folder }}/"
          git commit -m "Add file from URL ${{ github.event.inputs.file_url }} to ${{ github.event.inputs.folder }}/"
          git push origin "${{ github.event.inputs.branch }}"
