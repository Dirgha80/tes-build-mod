name: notif kernel

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      skip_build: ${{ steps.setvar.outputs.skip_build }}
      latest_ver: ${{ steps.setvar.outputs.latest_ver }}
    steps:
      - name: Checkout repo build
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Cek versi terbaru
        id: setvar
        run: |
          LATEST_VER=$(curl -s https://raw.githubusercontent.com/unifreq/linux-6.12.y/main/Makefile | grep -oP '(?<=SUBLEVEL =)[0-9\.]+')
          echo "latest_ver=$LATEST_VER" >> $GITHUB_OUTPUT
          echo "Versi terbaru: $LATEST_VER"

          if [ -f kernel.txt ]; then
            LAST_VER=$(cat kernel.txt)
          else
            LAST_VER=""
          fi

          if [ "$LAST_VER" = "$LATEST_VER" ]; then
            echo "skip_build=true" >> $GITHUB_OUTPUT
          else
            echo "$LATEST_VER" > kernel.txt
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git add kernel.txt
            git commit -m "Update kernel.txt ke $LATEST_VER" --quiet || true
            git pull --rebase --quiet || true
            git push --quiet || true
            echo "skip_build=false" >> $GITHUB_OUTPUT
          fi

      - name: Notif Telegram versi terbaru
        run: |
          VER="v${{ steps.setvar.outputs.latest_ver }}"
          BASE_URL="https://github.com/tes-rep/OpenClash/releases/download/$VER"
          RELEASE_URL="https://github.com/tes-rep/OpenClash/releases/tag/$VER"

          # Ambil versi lama
          if [ -f kernel.txt ]; then
            OLD_VER=$(cat kernel.txt)
          else
            OLD_VER="tidak tersedia"
          fi

          if [[ "${{ steps.setvar.outputs.skip_build }}" == "true" ]]; then
          # Versi sama dengan terakhir
          STATUS="ℹ️ <b>Tidak ada versi baru</b>"
          HEADER="Versi terakhir: <b>$VER</b>"
          MSG=$(printf "%s\n%s\n\n═══════════════════════\n\
            "$STATUS" \
            "$HEADER" \)
            
          else
          # Versi baru terdeteksi → notif build dimulai
            MSG=$(printf "⚡ <b>Build OpenClash dimulai...</b>\n═══════════════════════\n📌 <b>Versi baru:</b> %s\n📌 <b>Versi lama:</b> %s\n═══════════════════════\nHarap tunggu beberapa menit 🚀" \
              "$VER" \
              "$OLD_VER")
          fi

          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="$MSG" \
            -d parse_mode="HTML"
