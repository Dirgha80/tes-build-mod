name: notif kernel multi6

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  check-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Cek beberapa versi dan notif Telegram
        shell: bash
        run: |
          set -e

          # Daftar URL Makefile kernel berbeda
          URLS=("https://raw.githubusercontent.com/unifreq/linux-6.12.y/main/Makefile"
                "https://raw.githubusercontent.com/unifreq/linux-6.6.y/main/Makefile")
          # Buat folder untuk simpan hasil
          mkdir -p data/kernel
          # Ambil chat_id Telegram, hilangkan duplikat
          if [ -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            echo "❌ Secret TELEGRAM_CHAT_ID kosong, hentikan workflow"
            exit 1
          fi
          CHAT_IDS=($(echo "${{ secrets.TELEGRAM_CHAT_ID }}" | tr ',' '\n' | sort -u))

          # URL release kernel
          RELEASE_URL="https://github.com/tes-rep/kernel/releases"

          for URL in "${URLS[@]}"; do
            VER_CHANGED=false
            COMMIT_CHANGED=false

            # Buat identifier unik per kernel
            NAME=$(echo $URL | grep -oP 'linux-\d+\.\d+\.y')
            FILE="data/kernel/$NAME.txt"
            FILE_COMMIT="data/kernel/$NAME.commit"
            
            # Ambil konten Makefile
            CONTENT=$(curl -s $URL)
            if [ -z "$CONTENT" ]; then
              echo "⚠️ Gagal ambil $URL, lewati..."
              continue
            fi

            # Ambil versi lengkap kernel
            VERSION=$(echo "$CONTENT" | grep -oP '(?<=VERSION = )\d+')
            PATCHLEVEL=$(echo "$CONTENT" | grep -oP '(?<=PATCHLEVEL = )\d+')
            SUBLEVEL=$(echo "$CONTENT" | grep -oP '(?<=SUBLEVEL = )\d+')
            LATEST_VER="$VERSION.$PATCHLEVEL.$SUBLEVEL"

            if [ -z "$VERSION" ] || [ -z "$PATCHLEVEL" ] || [ -z "$SUBLEVEL" ]; then
              echo "⚠️ Versi tidak lengkap di $URL, lewati..."
              continue
            fi

            # Ambil versi lama
            if [ -f $FILE ]; then
              OLD_VER=$(cat $FILE)
            else
              OLD_VER="tidak tersedia"
            fi

            # Tentukan status versi
            if [ "$OLD_VER" != "$LATEST_VER" ]; then
              VER_CHANGED=true
              echo "$LATEST_VER" > $FILE
              git add $FILE
              MSG="⚡ <b>Versi baru tersedia</b>
              ═══════════════════════
              📌 <b>Versi baru:</b> v$LATEST_VER
              📌 <b>Versi lama:</b> $OLD_VER
              📌 <b>Link release:</b> <a href='$RELEASE_URL'>Klik di sini</a>
              ═══════════════════════
              Silakan build kernel..."
            else
              MSG="ℹ️ <b>kernel $NAME tidak ada versi baru</b>
              ═══════════════════════
              📌 <b>Versi terakhir:</b> v$LATEST_VER
              📌 <b>Link release:</b> <a href='$RELEASE_URL'>Klik di sini</a>"
            fi

            # === Cek Commit Terbaru ===
            REPO=$(echo $URL | grep -oP 'unifreq/linux-[0-9]+\.[0-9]+\.y')
            COMMIT_JSON=$(curl -s "https://api.github.com/repos/$REPO/commits?per_page=1")

            LATEST_COMMIT=$(echo "$COMMIT_JSON" | grep -oP '"sha": "\K[0-9a-f]+' | head -n1)
            COMMIT_MSG=$(echo "$COMMIT_JSON" | grep -oP '"message": "\K[^"]+' | head -n1)
            COMMIT_AUTHOR=$(echo "$COMMIT_JSON" | grep -oP '"name": "\K[^"]+' | head -n1)
            COMMIT_DATE=$(echo "$COMMIT_JSON" | grep -oP '"date": "\K[^"]+' | head -n1)

            if [ -z "$LATEST_COMMIT" ]; then
              echo "⚠️ Gagal ambil commit dari $REPO"
              continue
            fi

            if [ -f $FILE_COMMIT ]; then
              OLD_COMMIT=$(cat $FILE_COMMIT)
            else
              OLD_COMMIT="tidak ada"
            fi
         
            if [ "$LATEST_COMMIT" != "$OLD_COMMIT" ]; then
              COMMIT_CHANGED=true
              echo "$LATEST_COMMIT" > $FILE_COMMIT
              git add $FILE_COMMIT
              MSG="🆕 <b>Commit baru terdeteksi</b>
              ═══════════════════════
              📌 <b>Kernel:</b> $NAME
              📌 <b>Commit:</b> <a href='https://github.com/$REPO/commit/$LATEST_COMMIT'>$LATEST_COMMIT</a>
              📌 <b>Author:</b> $COMMIT_AUTHOR
              📌 <b>Tanggal:</b> $COMMIT_DATE
              ────────────────────────
              💬 <b>Message:</b> $COMMIT_MSG"
            fi

            # Kalau ada perubahan, commit ke repo + push
            if $VER_CHANGED || $COMMIT_CHANGED; then
              git config user.name "github-actions"
              git config user.email "actions@github.com"
              git commit -m "Update $NAME (versi/commit)" --quiet || true
              git pull --rebase --quiet || true
              git push --quiet || true
            else
              MSG="ℹ️ <b>$NAME tidak ada update</b>
              ═══════════════════════
              📌 <b>Versi terakhir:</b> v$LATEST_VER
              📌 <b>Commit terakhir:</b> <a href='https://github.com/$REPO/commit/$LATEST_COMMIT'>$LATEST_COMMIT</a>
              📌 <b>Author:</b> $COMMIT_AUTHOR
              📌 <b>Tanggal:</b> $COMMIT_DATE"
            fi

            # Kirim notif ke semua chat_id unik
            for CHAT_ID in "${CHAT_IDS[@]}"; do
              curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
                -d chat_id="$CHAT_ID" \
                -d text="$MSG" \
                -d parse_mode="HTML" \
                -d disable_web_page_preview=true
            done
          done
