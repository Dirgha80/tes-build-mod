name: Build luci-app-openclash (vernesong dev)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Cache last built version
      uses: actions/cache@v4
      with:
        path: last_version.txt
        key: last-version-cache

    - name: Cek versi terbaru dari vernesong/dev
      run: |
        LATEST_VER=$(curl -s https://raw.githubusercontent.com/vernesong/OpenClash/dev/luci-app-openclash/Makefile | grep -oP '(?<=PKG_VERSION:=)[0-9\.]+')
        echo "LATEST_VER=$LATEST_VER" >> $GITHUB_ENV
        echo "Versi terbaru: $LATEST_VER"

        if [ -f last_version.txt ]; then
          LAST_VER=$(cat last_version.txt)
          if [ "$LAST_VER" = "$LATEST_VER" ]; then
            echo "Versi sama ($LATEST_VER), skip build."
            exit 0
          fi
        fi
        echo "$LATEST_VER" > last_version.txt

    # 3. ==================== BUILD SDK LAMA (IPK) ====================
    - name: Download & Ekstrak SDK 15.05.1
      run: |
        mkdir -p $GITHUB_WORKSPACE/release
        mkdir -p /tmp/sdk_old
        curl -SLk --retry 3 "https://archive.openwrt.org/chaos_calmer/15.05.1/ar71xx/generic/OpenWrt-SDK-15.05.1-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2" -o /tmp/SDK.tar.bz2
        tar -xjf /tmp/SDK.tar.bz2 -C /tmp/sdk_old
        mv /tmp/sdk_old/OpenWrt-SDK-* $GITHUB_WORKSPACE/SDK

    - name: Clone luci-app-openclash (IPK)
      run: |
        cd $GITHUB_WORKSPACE/SDK/package
        git clone --depth 1 --branch dev --filter=blob:none --sparse https://github.com/vernesong/OpenClash luci-app-openclash
        cd luci-app-openclash && git sparse-checkout set luci-app-openclash

    - name: Compile po2lmo (IPK)
      run: |
        cd $GITHUB_WORKSPACE/SDK/package/luci-app-openclash/luci-app-openclash/tools/po2lmo
        make && sudo make install

    - name: Compile luci-app-openclash (IPK)
      run: |
        cd $GITHUB_WORKSPACE/SDK
        make package/luci-app-openclash/luci-app-openclash/compile V=s
        find bin/ -type f -name "luci-app-openclash_*.ipk" -exec cp {} $GITHUB_WORKSPACE/release/luci-app-openclash_${LATEST_VER}_all.ipk \;

    - name: Bersihkan SDK lama
      run: rm -rf $GITHUB_WORKSPACE/SDK /tmp/sdk_old /tmp/SDK.tar.bz2

    # 4. ==================== BUILD SDK SNAPSHOT (APK) ====================
    - name: Download & Ekstrak SDK Snapshot
      run: |
        mkdir -p /tmp/sdk_snap
        BASE_URL="https://downloads.openwrt.org/snapshots/targets/x86/64"
        SDK_NAME=$(curl -s $BASE_URL/ | grep -oE 'openwrt-sdk-x86-64[^"]+\.tar\.zst' | head -n 1)
        curl -SLk "$BASE_URL/$SDK_NAME" -o /tmp/SNAPSDK.tar.zst
        tar --zstd -xf /tmp/SNAPSDK.tar.zst -C /tmp/sdk_snap
        mv /tmp/sdk_snap/openwrt-sdk-* $GITHUB_WORKSPACE/SNAPSDK

    - name: Clone luci-app-openclash (APK)
      run: |
        cd $GITHUB_WORKSPACE/SNAPSDK/package
        git clone --depth 1 --branch dev --filter=blob:none --sparse https://github.com/vernesong/OpenClash luci-app-openclash
        cd luci-app-openclash && git sparse-checkout set luci-app-openclash

    - name: Compile po2lmo (APK)
      run: |
        cd $GITHUB_WORKSPACE/SNAPSDK/package/luci-app-openclash/luci-app-openclash/tools/po2lmo
        make && sudo make install

    - name: Compile luci-app-openclash (APK)
      run: |
        cd $GITHUB_WORKSPACE/SNAPSDK
        make defconfig
        make package/luci-app-openclash/luci-app-openclash/compile V=s
        find bin/ -type f -name "luci-app-openclash*.apk" -exec cp {} $GITHUB_WORKSPACE/release/luci-app-openclash_${LATEST_VER}.apk \;

    - name: Bersihkan SDK snapshot
      run: rm -rf $GITHUB_WORKSPACE/SNAPSDK /tmp/sdk_snap /tmp/SNAPSDK.tar.zst

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.LATEST_VER }}
        name: "OpenClash ${{ env.LATEST_VER }}"
        files: release/luci-app-openclash_${{ env.LATEST_VER }}.ipk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
